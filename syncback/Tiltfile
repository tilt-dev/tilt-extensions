# -*- mode: Python -*-

krsync_path = os.path.join(os.getcwd(), 'krsync.sh')


def syncback(name, k8s_object, paths, src_dir, target_dir='.', namespace='', verbose=False):
    """
    Create a local resource that will (via rsync) sync the specified files
    from the specified k8s object to the local filesystem.

    :param name (str): name of the created local resource
    :param k8s_object (str): a Kubernetes object identifier (e.g. deploy/my-deploy, job/my-job, or a pod ID) that Tilt
           can use to select a pod. As per the behavior of `kubectl exec`, we will act on the first pod of the specified
           object, using the first container by default.
    :param paths (List[str]): paths IN THE KUBERNETES CONTAINER to sync, relative to src_dir. May be files or dirs.
           Note that these must not begin with `./`.
    :param src_dir (str): directory IN THE KUBERNETES CONTAINER to sync from. Any paths specified, if relative,
           should be relative to this dir.
    :param target_dir (str, optional): directory ON THE LOCAL FS to sync to. Defaults to '.'
    :param namespace (str, optiona): namespace of the desired k8s_object, if not `default`
    :param verbose (bool, optional): if true, print additional rsync information
    :return:
    """

    # TODO: if you're rsync-savvy you might want to do the wildcarding manually--
    #   give an option to turn off automatic +'***'
    includes = ' '.join(['--include="{}***"'.format(p) for p in paths])

    if not src_dir.endswith('/'):
        fail('src_dir must be a directory and have a trailing slash')

    remote_name = 'dummy'
    if namespace:
        remote_name = 'dummy@{}'.format(namespace)

    flags = '-aOv'
    if verbose:
        flags = '-aOvvi'

    local_resource(name, '{krsync} {obj} {flags} --progress --stats --delete -T=/tmp/rsync.tilt {includes} --exclude="*" {remote}:{src} {target}'.
                   format(krsync=krsync_path, obj=k8s_object, flags=flags, includes=includes,
                          remote=remote_name, src=src_dir, target=target_dir),
               trigger_mode=TRIGGER_MODE_MANUAL, auto_init=False)

    # TODO: not necessarily manual/can link up to a resource as a dep

